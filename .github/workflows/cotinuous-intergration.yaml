name: continuous integration
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: install deps
        run: |
          python -m pip install -U pip
          pip install tox tox-gh-actions
      - name: run tests
        run: |
          tox

  crd_tests:
    name: crd validity tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes_version: ['1.19.6']
    services:
      postgres:
        image:  postgres:10.8
        env:
          POSTGRES_PASSWORD: somePassword
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432/tcp
    steps:
      - uses: actions/checkout@v1
      - name: run kopf tests
        env:
          POSTGRES_HOST: "127.0.0.1"
          POSTGRES_DEFAULT_DATABASE: postgres
          POSTGRES_PASS: somePassword
          POSTGRES_USER: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          sudo apt-get -y install postgresql-client
      - uses: engineerd/setup-kind@v0.5.0
      - name: Testing
        run: |
          kubectl apply -f postgres_crd.yaml
          kubectl apply -f postgresuser_crd.yaml
      - name: setup py37
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: install deps
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
      - name: timomo
        env:
          POSTGRES_HOST: "127.0.0.1"
          POSTGRES_DEFAULT_DATABASE: postgres
          POSTGRES_PASS: somePassword
          POSTGRES_USER: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          psql postgres://${POSTGRES_USER}:${POSTGRES_PASS}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DEFAULT_DATABASE} -c 'CREATE DATABASE rudo;'
