name: continuous integration
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: install deps
        run: |
          python -m pip install -U pip
          pip install tox tox-gh-actions
      - name: run tests
        run: |
          tox

  crd_tests:
    name: e2e_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes_version:
        - '1.19.6'
        - '1.20.1'
    steps:
      - uses: actions/checkout@v2
      - name: run kopf tests
        run: |
          sudo apt-get -y install postgresql-client
          sudo apt-get install -y netcat
      - name: setup minikube
        id: minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: v1.15.1
          kubernetes version: v${{ matrix.kubernetes_version }}
      - name: ruru
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: Testing
        run: |
          kubectl apply -f .ci/kubeconfig.yaml
          kubectl apply -f postgres_crd.yaml
          kubectl apply -f postgresuser_crd.yaml
      - name: psql test
        env:
          POSTGRES_HOST: "127.0.0.1"
          POSTGRES_DEFAULT_DATABASE: postgres
          POSTGRES_PASS: somePassword
          POSTGRES_USER: postgres
          POSTGRES_PORT: '31000'
        run: |
          kubectl wait pods -l app=postgres --for condition=Ready
          kubectl describe svc postgres
          while ! nc -z 127.0.0.1 31000; do
             sleep 0.1
          done
          psql postgresql://${POSTGRES_USER}:${POSTGRES_PASS}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DEFAULT_DATABASE} -c "CREATE DATABASE reda;"
      - name: setup py37
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: install deps
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements.txt
      - name: run kopf tests
        env:
          POSTGRES_HOST: "127.0.0.1"
          POSTGRES_DEFAULT_DATABASE: postgres
          POSTGRES_PASS: somePassword
          POSTGRES_USER: postgres
          POSTGRES_PORT: "31000"
        run: |
          tox -e e2e
